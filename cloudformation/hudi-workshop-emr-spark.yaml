Description: >
  This Cloudformation template creates resources for the Apache Hudi Workshop. It creates an Amazon EMR Cluster, Amazon Managed Streaming for Kafka Cluster, an Amazon Aurora cluster

Parameters:

  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String
    Default: 'Hudi'

  EEKeyPair:
    Description: SSH key (for access to EMR instances)
    Type: AWS::EC2::KeyPair::KeyName
    Default: ee-default-keypair


  S3HudiArtifacts:
    Type: String
    Description: S3 Location for Hudi artifacts
    Default: 'emr-workshops-us-west-2'

  NotebookInstanceType:
    Description: Notebook instance type
    Type: String
    Default: ml.t2.medium

Mappings:
  # Hard values for the subnet masks. These masks define
  # the range of internal IP addresses that can be assigned.
  # The VPC can have all IP's from 10.0.0.0 to 10.0.255.255
  # There are two subnets which cover the ranges:
  #
  # 10.0.0.0 - 10.0.0.255
  # 10.0.1.0 - 10.0.1.255
  SubnetConfig:
    VPC:
      CIDR: '10.192.0.0/16'
    PublicSubnet1:
      CIDR: '10.192.10.0/24'
    PublicSubnet2:
      CIDR: '10.192.11.0/24'
    PublicSubnet3:
      CIDR: '10.192.12.0/24'

  RegionAMI:
    us-east-1:
      HVM64: ami-00068cd7555f543d5
      HVMG2: ami-0a584ac55a7631c0c
    us-west-2:
      HVM64: ami-0b5c89eb6257578f2
      HVMG2: ami-0e09505bc235aa82d
    us-east-2:
      HVM64: ami-0dacb0c129b49f529
    us-west-1:
      HVM64: ami-0bdb828fd58c52235
      HVMG2: ami-066ee5fd4a9ef77f1
    eu-west-1:
      HVM64: ami-01f14919ba412de34
      HVMG2: ami-0a7c483d527806435
    ap-northeast-1:
      HVM64: ami-06cd52961ce9f0d85
      HVMG2: ami-053cdd503598e4a9d
    ap-southeast-1:
      HVM64: ami-08569b978cc4dfa10
      HVMG2: ami-0be9df32ae9f92309


Resources:

  EMRSparkHudiCluster:
    Type: AWS::EMR::Cluster
    Properties:
      Name: !Sub ${EnvironmentName} Spark EMR Cluster
      JobFlowRole: EMR_EC2_DefaultRole
      ReleaseLabel: emr-6.3.0
      ScaleDownBehavior: TERMINATE_AT_TASK_COMPLETION
      LogUri: !Join [ '', [ 's3://aws-logs-', !Ref 'AWS::AccountId', '-', !Ref 'AWS::Region', '/elasticmapreduce/' ]]
      ServiceRole: EMR_DefaultRole
      Tags:
        - Key: 'Name'
          Value: !Sub ${EnvironmentName} Spark EMR Cluster
      VisibleToAllUsers: true
      Applications:
        - Name: Spark
        - Name: Hive
        - Name: Hadoop
        #AutoScalingRole: 'EMR_AutoScaling_DefaultRole'
      Configurations:
        #- Classification: presto-connector-hive
        #  ConfigurationProperties:
        #     "hive.metastore.glue.datacatalog.enabled": "true"
        #- Classification: spark
        #  ConfigurationProperties:
        #    "maximizeResourceAllocation": "true"
        #- Classification: spark-defaults
        #  ConfigurationProperties:
        #    "spark.driver.extraClassPath": "/home/hadoop/javalib/*:/usr/lib/hadoop-lzo/lib/*:/usr/lib/hadoop/hadoop-aws.jar:/usr/share/aws/aws-java-sdk/*:/usr/share/aws/emr/emrfs/conf:/usr/share/aws/emr/emrfs/lib/*:/usr/share/aws/emr/emrfs/auxlib/*:/usr/share/aws/emr/security/conf:/usr/share/aws/emr/security/lib/*:/usr/share/aws/hmclient/lib/aws-glue-datacatalog-spark-client.jar:/usr/share/java/Hive-JSON-Serde/hive-openx-serde.jar:/usr/share/aws/sagemaker-spark-sdk/lib/sagemaker-spark-sdk.jar"
        - Classification: hive-site
          ConfigurationProperties:
             "hive.metastore.client.factory.class": "com.amazonaws.glue.catalog.metastore.AWSGlueDataCatalogHiveClientFactory"
        - Classification: spark-hive-site
          ConfigurationProperties:
             "hive.metastore.client.factory.class": "com.amazonaws.glue.catalog.metastore.AWSGlueDataCatalogHiveClientFactory"
      EbsRootVolumeSize: 32
      #BootstrapActions:
      #  - Name: setup-delta-lake
      #    ScriptBootstrapAction:
      #      Path: s3://aksh-test-versioning/delta/delta-init.sh
      Instances:
        AdditionalMasterSecurityGroups: [ !ImportValue WorkshopSecurityGroup ]
        AdditionalSlaveSecurityGroups: [ !ImportValue WorkshopSecurityGroup ]
        Ec2KeyName: !Ref EEKeyPair
        Ec2SubnetId: !ImportValue PublicSubnet1
        MasterInstanceGroup:
          EbsConfiguration:
            EbsBlockDeviceConfigs:
              - VolumeSpecification:
                  SizeInGB: 100
                  VolumeType: gp2
          InstanceCount: 1
          InstanceType: r5.4xlarge
          Market: ON_DEMAND
          Name: 'Master instance group'
        #CoreInstanceGroup:
        #  EbsConfiguration:
        #    EbsBlockDeviceConfigs:
        #      - VolumeSpecification:
        #          SizeInGB: 100
        #          VolumeType: gp2
        #  InstanceCount: 2
        #  InstanceType: r4.2xlarge
        #  Market: ON_DEMAND
        #  Name: 'Core instance group'


  EMRIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - 'ec2.amazonaws.com'
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonElasticMapReduceforEC2Role
        - arn:aws:iam::aws:policy/AmazonMSKFullAccess
        - arn:aws:iam::aws:policy/AmazonSageMakerFullAccess
        - arn:aws:iam::aws:policy/AmazonKinesisFullAccess
        - arn:aws:iam::aws:policy/AmazonKinesisFirehoseFullAccess
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore

  EMRServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service:
                - 'elasticmapreduce.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AmazonElasticMapReduceRole'

  EMRInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Roles: [ !Ref EMRIAMRole ]

  SagemakerLifecycleConfig:
    Type: "AWS::SageMaker::NotebookInstanceLifecycleConfig"
    Properties:
      NotebookInstanceLifecycleConfigName: !Sub ${EnvironmentName}LifecycleConfig
      OnStart:
        - Content:
            Fn::Base64: !Sub |

              sudo -u ec2-user -i <<'EOF'
              ## Download and execute lifecycle script
              aws s3 cp s3://emr-workshops-us-west-2/hudi/scripts/sagemaker_lifecycle.sh /home/ec2-user/scripts/
              chmod +x /home/ec2-user/scripts/sagemaker_lifecycle.sh
              /home/ec2-user/scripts/sagemaker_lifecycle.sh

              EOF



  # SageMaker goes last as the lifecycle captures the EMR Private DNS Amazon
  # and Kafka broker hostnames.
  SagemakerRole:
    DependsOn:
      - EMRSparkHudiCluster
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - 'sagemaker.amazonaws.com'
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonSageMakerFullAccess'
        - 'arn:aws:iam::aws:policy/AWSLambda_FullAccess'
        - 'arn:aws:iam::aws:policy/AmazonAthenaFullAccess'
        - 'arn:aws:iam::aws:policy/AmazonElasticMapReduceFullAccess'
        - 'arn:aws:iam::aws:policy/AmazonMSKFullAccess'
        - 'arn:aws:iam::aws:policy/AmazonS3FullAccess'
        - 'arn:aws:iam::aws:policy/AmazonRDSReadOnlyAccess'

Outputs:

  EmrSparkClusterId:
    Value: !Ref EMRSparkHudiCluster

